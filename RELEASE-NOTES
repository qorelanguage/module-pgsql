------------
Version 2.0
------------

implemented the selectRow method
implemented support for the prepared statement API
disable warning and notice messages by default for each connection
implemented support for binding and retrieving "number" types with Qore 0.8.6+
return numeric types as an integer if possible


-------------
Version 1.0.6
-------------

compile against PostgresSQL client only (no need for server)
native MS Windows port
fixed build errors for new Linux distributions


-------------
Version 1.0.5
-------------

fixed module version reporting
execRaw() method implemented
updated to use new date/time APIs when compiled against qore 0.8.0+, so time
zone information and microseconds are maintained when binding and retrieving
date/time values


-------------
Version 1.0.4
-------------

added support for setting the port number for connections when used with qore
0.7.5 or greater

fixed functionality on big-endian (most significant byte first) machines

updated query parsing for '%*' placeholders to ignore '%' characters when they
are preceded by an alphanumeric character in order to avoid having to use
backslashes to escape them in SQL functions, etc


-------------
Version 1.0.3
-------------

fixed a bug returning numeric values when the significant value was given as a
round number multiple of 10,000 due to an error decoding internal postgresql
data


-------------
Version 1.0.2
-------------

updated configure to check the directory specified with --prefix first when
looking for dependent libraries


-------------
Version 1.0.1
-------------

fixed module naming and module directory handling to correspond to changes in
qore 0.7.1

made qore 0.7.1 the minimum version for compiling the module


-------------
Version 1.0.0
-------------

Initial release; see README for more information


------------------
all older releases
------------------

----------
Qore 0.6.2
----------

*) "pgsql" module: PostgreSQL driver
the new "pgsql" driver uses efficient binary communication with PostgreSQL
servers for binding and retrieving values from queries.
The driver supports the following features:
* all builtin PostgreSQL data types are supported
* multi-dimensional arrays are supported for binding and retrieving
* is thread-safe
* stored procedure execution is supported
* transaction management is supported
* transparent character encoding conversion is supported if necessary

The driver's name is "pgsql" and the Datasource type constant is SQL::DSPGSQL
ex: $db = new Datasource(DSPGSQL);
ex: $db = new Datasource("pgsql");

*) "sybase" module: Sybase driver
the new "sybase" driver uses Sybase' ct-lib to communicate with Sybase
servers.

The driver's name is "sybase" and the Datasource type constant is
SQL::DSSybase
ex: $db = new Datasource(DSSybase);
ex: $db = new Datasource("sybase");

features:
* all builtin Sybase data types are supported
* is thread-safe
* stored procedure execution is supported
* transaction management is supported
* transparent character encoding conversion is supported if necessary
* verbose error reporting in exceptions using client and server message
information when available

This driver also provides a special format for returning multiple result sets
and/or output parameters in a single statement.  See the qore documentation
for more information.
